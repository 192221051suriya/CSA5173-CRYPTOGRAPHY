#include <stdio.h>
#include <stdlib.h>

char affineEncrypt(char pChar, int a, int b) {
   return ((a * (pChar - 'a') + b) % 26) + 'a';
}

char affineDecrypt(char cChar, int a_inv, int b) {
   return ((a_inv * ((cChar - 'a') - b + 26)) % 26) + 'a';
}

int modInverse(int a, int m) {
   a %= m;
   for (int x=1; x<m; x++) 
      if ((a*x)%m == 1)
         return x;
   return -1;
}

int main() {
   char plaintext[100], ciphertext[100];
   int a, b;

   printf("Enter plaintext: ");
   fgets(plaintext, sizeof(plaintext), stdin);
   printf("Enter value of a: ");
   scanf("%d", &a);
   printf("Enter value of b: ");
   scanf("%d", &b);

   int a_inv = modInverse(a, 26);
   
   if(a_inv == -1){
       printf("Invalid value of a. It must be coprime with 26.\n");
       return EXIT_FAILURE;
   }

   for(int i=0; plaintext[i]; i++) 
      ciphertext[i]=affineEncrypt(plaintext[i], a,b);

   ciphertext[strlen(plaintext)]='\0';

   printf("Ciphertext: %s\n", ciphertext);

   return EXIT_SUCCESS;
}
