#include <stdio.h>
#include <string.h>

void toLowerCase(char *str) {
    for (int i = 0; str[i]; i++) {
        if (str[i] >= 'A' && str[i] <= 'Z') {
            str[i] += 32;
        }
    }
}

void generateKeyTable(char key[5][5], char *matrix) {
    int index = 0;

    for (int i = 0; i < 5; i++) {
        for (int j = 0; j < 5; j++) {
            key[i][j] = matrix[index++];
        }
    }
}

void encryptPlayfair(char *plaintext, char key[5][5], char *ciphertext) {
    int k = 0;
    
    for (int i = 0; plaintext[i]; i += 2) {
        char a = plaintext[i];
        char b;

        if (!plaintext[i + 1]) b = 'X'; // Padding with X if odd length
        else b = plaintext[i + 1];

        if (a == b) b = 'X'; // Replace duplicate letters with X

        int row1, col1, row2, col2;
        for (row1 = col1 = row2 = col2 = 0; row1 < 5; row1++)
            for (col1 = 0; col1 < 5; col1++)
                if (key[row1][col1] == a) break;

        for (row2 = col2 = 0; row2 < 5; row2++)
            for (col2 = 0; col2 < 5; col2++)
                if (key[row2][col2] == b) break;

        if (row1 == row2) {
            ciphertext[k++] = key[row1][(col1 + 1) % 5]; // Move right
            ciphertext[k++] = key[row2][(col2 + 1) % 5]; // Move right
        } else if (col1 == col2) {
            ciphertext[k++] = key[(row1 + 1) % 5][col1]; // Move down
            ciphertext[k++] = key[(row2 + 1) % 5][col2]; // Move down
        } else {
            ciphertext[k++] = key[row1][col2];
            ciphertext[k++] = key[row2][col1];
        }
    }
    
    ciphertext[k] = '\0';
}

int main() {
    char plaintext[] = "Must see you over Cadogan West. Coming at once.";
    char key[5][5];
    char matrix[26] = "MFHIJKUNOPOZVWXYELARGDSTBC";

    toLowerCase(plaintext);
    
    generateKeyTable(key, matrix);
    
    char ciphertext[100];
    
    encryptPlayfair(plaintext, key, ciphertext);
    
    printf("Encrypted message: %s\n", ciphertext);

    return 0;
}
