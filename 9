#include <stdio.h>
#include <string.h>

void toLowerCase(char *str) {
    for (int i = 0; str[i]; i++) {
        if (str[i] >= 'A' && str[i] <= 'Z') {
            str[i] += 32; // Convert to lowercase
        }
    }
}

void generateKeyTable(char key[5][5], char *matrix) {
    int used[26] = {0};
    int index = 0;

    for (int i = 0; i < 5; i++) {
        for (int j = 0; j < 5; j++) {
            key[i][j] = matrix[index++];
        }
    }
}

void decryptPlayfair(char *ciphertext, char key[5][5], char *plaintext) {
    int i, j;
    int len = strlen(ciphertext);
    int k = 0;

    for (i = 0; i < len; i += 2) {
        char a = ciphertext[i];
        char b = ciphertext[i + 1];

        int row1, col1, row2, col2;
        for (row1 = col1 = row2 = col2 = 0; row1 < 5; row1++)
            for (col1 = 0; col1 < 5; col1++)
                if (key[row1][col1] == a) break;

        for (row2 = col2 = 0; row2 < 5; row2++)
            for (col2 = 0; col2 < 5; col2++)
                if (key[row2][col2] == b) break;

        if (row1 == row2) {
            plaintext[k++] = key[row1][(col1 + 4) % 5]; // Move left
            plaintext[k++] = key[row2][(col2 + 4) % 5]; // Move left
        } else if (col1 == col2) {
            plaintext[k++] = key[(row1 + 4) % 5][col1]; // Move up
            plaintext[k++] = key[(row2 + 4) % 5][col2]; // Move up
        } else {
            plaintext[k++] = key[row1][col2];
            plaintext[k++] = key[row2][col1];
        }
    }
    plaintext[k] = '\0';
}

int main() {
    char ciphertext[] = "KXJEY UREBE ZWEHE WRYTU HEYFS KREHE GOYFI WTTTU OLKSY CAJPO BOTEI ZONTX BYBNT GONEY CUZWR GDSON SXBOU YWRHE BAAHY USEDO";
    char key[5][5];
    char matrix[26] = "MFHIJKUNOPOZVWXYELARGDSTBC";
    
    toLowerCase(ciphertext);
    
    generateKeyTable(key, matrix);
    
    char plaintext[100];
    
    decryptPlayfair(ciphertext, key, plaintext);
    
    printf("Decrypted message: %s\n", plaintext);

    return 0;
}
